{"version":3,"file":"default-src_app_shared_shared-component_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAA6D;AACzB;AAC4B;IAOnD,wBAAwB,SAAxB,wBAAwB;IAInC,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAHhD,YAAO,GAAG,KAAK,CAAC;QACR,eAAU,GAAG,IAAI,8CAAY,EAAE,CAAC;IAEW,CAAC;IAEpD,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACxE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;IAChC,CAAC;CACF;;YArBQ,0EAAa;;AAOT,wBAAwB;IALpC,wDAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,+JAAgD;;KAEjD,CAAC;GACW,wBAAwB,CAcpC;AAdoC;;;;;;;;;;;;;;;;;;;;;;ACTkC;IAO1D,mBAAmB,SAAnB,mBAAmB;;QACrB,gBAAW,GAAG,MAAM,CAAC;QACpB,aAAQ,GAAG,IAAI,uDAAY,EAAQ,CAAC;QACpC,YAAO,GAAG,IAAI,uDAAY,EAAQ,CAAC;IAQ/C,CAAC;IANC,IAAI;QACF,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IACD,GAAG;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;CACF;;0BAVE,gDAAK;uBACL,iDAAM;sBACN,iDAAM;;AAHI,mBAAmB;IAL/B,wDAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,0JAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAW/B;AAX+B;;;;;;;;;;;;;;;;;;;;;;ACPiB;IAQpC,kBAAkB,SAAlB,kBAAkB;;QACpB,SAAI,GAAG,MAAM,CAAC;QACd,aAAQ,GAAG,kBAAkB,CAAC;QAC9B,iBAAY,GAAG,QAAQ,CAAC;QACxB,gBAAW,GAAG,EAAE,CAAC;IAO5B,CAAC;IAJC,YAAY;QACV,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;QAChD,OAAO,MAAM,IAAI,KAAK,IAAI,OAAO,CAAC;IACpC,CAAC;CACF;;mBAVE,gDAAK;uBACL,gDAAK;2BACL,gDAAK;0BACL,gDAAK;sBACL,gDAAK;;AALK,kBAAkB;IAL9B,wDAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,yJAA0C;;KAE3C,CAAC;GACW,kBAAkB,CAW9B;AAX8B;;;;;;;;;;;;;;;;;;;;;;ACRwC;IAQ1D,sBAAsB,SAAtB,sBAAsB;;QACxB,SAAI,GAAG,MAAM,CAAC;QACd,iBAAY,GAAG,QAAQ,CAAC;QACxB,gBAAW,GAAG,aAAa,CAAC;QAC5B,SAAI,GAAG,KAAK,CAAC;QAEZ,qBAAgB,GAAG,IAAI,uDAAY,EAAQ,CAAC;IAUxD,CAAC;IARC,YAAY;QACV,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,YAAY;QACV,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;QAChD,OAAO,MAAM,IAAI,KAAK,IAAI,OAAO,CAAC;IACpC,CAAC;CACF;;mBAfE,gDAAK;2BACL,gDAAK;0BACL,gDAAK;mBACL,gDAAK;sBACL,gDAAK;+BACL,iDAAM;;AANI,sBAAsB;IALlC,wDAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,6JAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAgBlC;AAhBkC;;;;;;;;;;;;;;;;;;;;;;;;ACR0B;AACzB;AAC4B;IAOnD,gBAAgB,SAAhB,gBAAgB;IAI3B,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAHhD,YAAO,GAAG,KAAK,CAAC;QACR,eAAU,GAAG,IAAI,8CAAY,EAAE,CAAC;IAEW,CAAC;IAEpD,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC9D,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;IAChC,CAAC;CACF;;YArBQ,0EAAa;;AAOT,gBAAgB;IAL5B,wDAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,sJAAuC;;KAExC,CAAC;GACW,gBAAgB,CAc5B;AAd4B;;;;;;;;;;;;;;;;;;;ACT7B,yCAAyC;AACzC,gDAAgD;AACL;AACJ;IAG1B,aAAa,SAAb,aAAa;IAMxB;QALA,UAAK,GAAG,IAAI,iDAAe,CAAM,IAAI,CAAC,CAAC;QACvC,kBAAa,GAAG,IAAI,iDAAe,CAAS,EAAE,CAAC,CAAC;QAChD,aAAQ,GAAG,IAAI,iDAAe,CAAU,KAAK,CAAC,CAAC;QAC/C,qBAAgB,GAAG,IAAI,iDAAe,CAAU,KAAK,CAAC,CAAC;IAExC,CAAC;IAEhB,UAAU,CAAC,IAAS;QAClB,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAExC,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,GAAG,EAAE;YACnC,MAAM,YAAY,GAAG,MAAM,CAAC,MAAgB,CAAC;YAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9B,CAAC;IAED,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;CACF;;AAzBY,aAAa;IADzB,yDAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;GACtB,aAAa,CAyBzB;AAzByB;;;;;;;;;;;;;;;;;;;;;;;;ACNe;AACM;AAE2C;AACY;AACT;AACX;AACmB;IAmBxF,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAjBlC,uDAAQ,CAAC;QACR,YAAY,EAAE;YACZ,kGAAkB;YAClB,8GAAsB;YACtB,qGAAmB;YACnB,0FAAgB;YAChB,6GAAwB;SACzB;QACD,OAAO,EAAE,CAAC,wDAAY,CAAC;QACvB,OAAO,EAAE;YACP,kGAAkB;YAClB,8GAAsB;YACtB,qGAAmB;YACnB,0FAAgB;YAChB,6GAAwB;SACzB;KACF,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;AC1BnC,iEAAe,+JAA+J;;;;;;;;;;;;;;ACA9K,iEAAe,scAAsc;;;;;;;;;;;;;;ACArd,iEAAe,4BAA4B,6DAA6D,sTAAsT,WAAW,mDAAmD;;;;;;;;;;;;;;ACA5d,iEAAe,0EAA0E,8DAA8D,8fAA8f;;;;;;;;;;;;;;ACArpB,iEAAe,+JAA+J","sources":["./src/app/components/backdrop-loading/backdrop-loading.component.ts","./src/app/components/common/edit-button/edit-button.component.ts","./src/app/components/common/input-form/input-form.component.ts","./src/app/components/common/input-password/input-password.component.ts","./src/app/components/common/loading/loading.component.ts","./src/app/services/global.service.ts","./src/app/shared/shared-component.module.ts","./src/app/components/backdrop-loading/backdrop-loading.component.html","./src/app/components/common/edit-button/edit-button.component.html","./src/app/components/common/input-form/input-form.component.html","./src/app/components/common/input-password/input-password.component.html","./src/app/components/common/loading/loading.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { GlobalService } from 'src/app/services/global.service';\n\n@Component({\n  selector: 'app-backdrop-loading',\n  templateUrl: './backdrop-loading.component.html',\n  styleUrls: ['./backdrop-loading.component.scss'],\n})\nexport class BackdropLoadingComponent implements OnInit, OnDestroy {\n  loading = false;\n  private ondestroy$ = new Subscription();\n\n  constructor(private globalService: GlobalService) {}\n\n  ngOnInit(): void {\n    this.ondestroy$ = this.globalService.backdropLoading$.subscribe((value) => {\n      this.loading = value;\n    });\n  }\n  ngOnDestroy(): void {\n    this.ondestroy$.unsubscribe();\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-button',\n  templateUrl: './edit-button.component.html',\n  styleUrls: ['./edit-button.component.scss'],\n})\nexport class EditButtonComponent {\n  @Input() controlType = 'edit';\n  @Output() editEmit = new EventEmitter<void>();\n  @Output() delEmit = new EventEmitter<void>();\n\n  edit() {\n    this.editEmit.emit();\n  }\n  del() {\n    this.delEmit.emit();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-input-form',\n  templateUrl: './input-form.component.html',\n  styleUrls: ['./input-form.component.scss'],\n})\nexport class InputFormComponent {\n  @Input() type = 'text';\n  @Input() errorMsg = 'ກະລຸນາປ້ອນຂໍ້ມູນ';\n  @Input() borderRadius = 'normal';\n  @Input() placeholder = '';\n  @Input() control: FormControl;\n\n  displayError() {\n    const { errors, dirty, touched } = this.control;\n    return errors && dirty && touched;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-input-password',\n  templateUrl: './input-password.component.html',\n  styleUrls: ['./input-password.component.scss'],\n})\nexport class InputPasswordComponent {\n  @Input() type = 'text';\n  @Input() borderRadius = 'normal';\n  @Input() placeholder = 'Enter Value';\n  @Input() show = false;\n  @Input() control: FormControl;\n  @Output() showPasswordEmit = new EventEmitter<void>();\n\n  showPassword() {\n    this.showPasswordEmit.emit();\n  }\n\n  displayError() {\n    const { errors, dirty, touched } = this.control;\n    return errors && dirty && touched;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { GlobalService } from 'src/app/services/global.service';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss'],\n})\nexport class LoadingComponent implements OnInit, OnDestroy {\n  loading = false;\n  private ondestroy$ = new Subscription();\n\n  constructor(private globalService: GlobalService) {}\n\n  ngOnInit() {\n    this.ondestroy$ = this.globalService.loading$.subscribe((val) => {\n      this.loading = val;\n    });\n  }\n  ngOnDestroy(): void {\n    this.ondestroy$.unsubscribe();\n  }\n}\n","/* eslint-disable no-underscore-dangle */\r\n// eslint-disable-next-line no-underscore-dangle\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GlobalService {\r\n  _file = new BehaviorSubject<any>(null);\r\n  _photoPreview = new BehaviorSubject<string>('');\r\n  loading$ = new BehaviorSubject<boolean>(false);\r\n  backdropLoading$ = new BehaviorSubject<boolean>(false);\r\n\r\n  constructor() {}\r\n\r\n  handleFile(file: any) {\r\n    const fileTarget = file.target.files[0];\r\n\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => {\r\n      const photoPreview = reader.result as string;\r\n      this._photoPreview.next(photoPreview);\r\n    });\r\n\r\n    reader.readAsDataURL(fileTarget);\r\n    this._file.next(fileTarget);\r\n  }\r\n\r\n  clearFile() {\r\n    this._file.next(null);\r\n    this._photoPreview.next('');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from './shared.module';\r\n\r\nimport { InputFormComponent } from '../components/common/input-form/input-form.component';\r\nimport { InputPasswordComponent } from '../components/common/input-password/input-password.component';\r\nimport { EditButtonComponent } from '../components/common/edit-button/edit-button.component';\r\nimport { LoadingComponent } from '../components/common/loading/loading.component';\r\nimport { BackdropLoadingComponent } from '../components/backdrop-loading/backdrop-loading.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    InputFormComponent,\r\n    InputPasswordComponent,\r\n    EditButtonComponent,\r\n    LoadingComponent,\r\n    BackdropLoadingComponent,\r\n  ],\r\n  imports: [SharedModule],\r\n  exports: [\r\n    InputFormComponent,\r\n    InputPasswordComponent,\r\n    EditButtonComponent,\r\n    LoadingComponent,\r\n    BackdropLoadingComponent,\r\n  ],\r\n})\r\nexport class SharedComponenttModule {}\r\n","export default \"<ng-container *ngIf=\\\"loading\\\">\\n  <div class=\\\"backdrop\\\">\\n    <ion-spinner name=\\\"circles\\\" color=\\\"primary\\\"></ion-spinner>\\n  </div>\\n</ng-container>\\n\";","export default \"<ion-buttons slot=\\\"end\\\">\\n  <ng-container *ngIf=\\\"controlType === 'edit'\\\">\\n    <ion-button (click)=\\\"edit()\\\" color=\\\"success\\\">\\n      <ion-icon name=\\\"pencil-outline\\\"></ion-icon>\\n    </ion-button>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"controlType === 'del'\\\">\\n    <ion-button (click)=\\\"del()\\\" shape=\\\"rounded\\\" color=\\\"danger\\\">\\n      <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n    </ion-button>\\n  </ng-container>\\n</ion-buttons>\\n\";","export default \"<ion-item\\n  [ngClass]=\\\"{ error: control.errors && (control.dirty || control.touched) }\\\"\\n  [class]=\\\"borderRadius\\\"\\n  lines=\\\"none\\\"\\n>\\n  <ion-input\\n    [type]=\\\"type\\\"\\n    [placeholder]=\\\"placeholder\\\"\\n    [formControl]=\\\"control\\\"\\n  ></ion-input>\\n</ion-item>\\n\\n<ng-container *ngIf=\\\"displayError()\\\">\\n  <ng-container *ngIf=\\\"control.errors\\\">\\n    <div class=\\\"input-err\\\">\\n      {{ errorMsg }}\\n    </div>\\n  </ng-container>\\n</ng-container>\\n\";","export default \"<ion-item\\n  lines=\\\"none\\\"\\n  [class]=\\\"borderRadius\\\"\\n  [ngClass]=\\\"{ error: control.invalid && (control.dirty || control.touched) }\\\"\\n>\\n  <ion-input\\n    [type]=\\\"show ? 'text' : 'password'\\\"\\n    [placeholder]=\\\"placeholder\\\"\\n    [formControl]=\\\"control\\\"\\n  >\\n  </ion-input>\\n  <ion-button slot=\\\"end\\\" (click)=\\\"showPassword()\\\" fill=\\\"clear\\\" shape=\\\"circle\\\">\\n    <ion-icon [name]=\\\"show ? 'eye-off' : 'eye'\\\"></ion-icon>\\n  </ion-button>\\n</ion-item>\\n\\n<ng-container *ngIf=\\\"displayError()\\\">\\n  <ng-container *ngIf=\\\"control.errors\\\">\\n    <div class=\\\"input-err\\\">ກະລຸນາໃສ່ລະຫັດຜ່ານ</div>\\n  </ng-container>\\n</ng-container>\\n\";","export default \"<ng-container *ngIf=\\\"loading\\\">\\n  <div class=\\\"backdrop\\\">\\n    <ion-spinner name=\\\"circles\\\" color=\\\"primary\\\"></ion-spinner>\\n  </div>\\n</ng-container>\\n\";"],"names":[],"sourceRoot":"webpack:///"}