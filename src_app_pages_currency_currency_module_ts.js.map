{"version":3,"file":"src_app_pages_currency_currency_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACmB;AACb;AAC6C;AAE7C;AACiC;IAgBnE,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAd9B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,sEAAY;YACZ,kEAAqB,CAAC;gBACpB;oBACE,IAAI,EAAE,EAAE;oBACR,SAAS,EAAE,wDAAY;iBACxB;aACF,CAAC;YACF,sGAA2B;YAC3B,0FAAsB;SACvB;QACD,YAAY,EAAE,CAAC,wDAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACtBmB;AACb;AACW;AAGoB;IAOvD,YAAY,SAAZ,YAAY;IAKvB,YAAoB,WAA4B;QAA5B,gBAAW,GAAX,WAAW,CAAiB;QAJhD,UAAK,GAAY,EAAE,CAAC;QACpB,eAAU,GAAgB,EAAE,CAAC;QAC7B,QAAG,GAAG,0DAAM,CAAC;IAEsC,CAAC;IAEpD,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,SAAS,CAAC,GAAQ;QAChB,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;YAC7C,OAAO,CAAC,IAAI,CAAC,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC7C,IAAI,EAAE,CAAC,IAAI,EAAE,EAAE;oBACb,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBACpB,CAAC;gBACD,KAAK,EAAE,GAAG,EAAE,GAAE,CAAC;gBACf,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;aACnB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YApCQ,8EAAe;;AAOX,YAAY;IALxB,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,kJAAmC;;KAEpC,CAAC;GACW,YAAY,CA6BxB;AA7BwB;;;;;;;;;;;;;;;;;;;;ACZkB;AACO;AAGC;IAGtC,eAAe,SAAf,eAAe;IAI1B,YACU,IAAgB,EAChB,cAA8B;QAD9B,SAAI,GAAJ,IAAI,CAAY;QAChB,mBAAc,GAAd,cAAc,CAAgB;QALhC,YAAO,GAAG,OAAO,CAAC;QAClB,gBAAW,GAAG,YAAY,CAAC;IAKhC,CAAC;IAEE,UAAU;;YACd,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC/D,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,EAAE,CAAC,CAAC;QAC7E,CAAC;KAAA;CACF;;YAnBQ,4DAAU;YAGV,4DAAc;;AAGV,eAAe;IAD3B,yDAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;GACtB,eAAe,CAa3B;AAb2B;;;;;;;;;;;;;;;ACP5B,iEAAe,8VAA8V,oGAAoG,MAAM,8CAA8C,oBAAoB,mCAAmC,oBAAoB,wKAAwK","sources":["./src/app/pages/currency/currency.module.ts","./src/app/pages/currency/currency.page.ts","./src/app/services/currency.service.ts","./src/app/pages/currency/currency.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { SharedLayoutComponentModule } from 'src/app/shared/shared-layout-component.module';\n\nimport { CurrencyPage } from './currency.page';\nimport { SharedComponenttModule } from 'src/app/shared/shared-component.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: CurrencyPage,\n      },\n    ]),\n    SharedLayoutComponentModule,\n    SharedComponenttModule,\n  ],\n  declarations: [CurrencyPage],\n})\nexport class CurrencyPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { appUrl } from 'src/app/app-url.module';\nimport { ICurrency } from 'src/app/models/currency.model';\nimport { IRate } from 'src/app/models/rate.model';\nimport { CurrencyService } from 'src/app/services/currency.service';\n\n@Component({\n  selector: 'app-currency',\n  templateUrl: './currency.page.html',\n  styleUrls: ['./currency.page.scss'],\n})\nexport class CurrencyPage implements OnInit {\n  rates: IRate[] = [];\n  currencies: ICurrency[] = [];\n  url = appUrl;\n\n  constructor(private rateService: CurrencyService) {}\n\n  ngOnInit() {\n    this.onFetchData();\n  }\n\n  isRefresh(evt: any) {\n    setTimeout(() => {\n      this.onFetchData();\n      evt.target.complete();\n    }, 500);\n  }\n\n  onFetchData() {\n    this.rateService.getAllRate().then((observe) => {\n      observe.pipe(map((val) => val.rate)).subscribe({\n        next: (data) => {\n          this.rates = data;\n        },\n        error: () => {},\n        complete: () => {},\n      });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { IRate } from '../models/rate.model';\r\nimport { StorageService } from './storage.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CurrencyService {\r\n  private rateUrl = 'rates';\r\n  private currencyUrl = 'currencies';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private storageService: StorageService\r\n  ) {}\r\n\r\n  async getAllRate(): Promise<Observable<{ rate: IRate[] }>> {\r\n    const branch = await this.storageService.storageData('branch');\r\n    return await this.http.get<{ rate: IRate[] }>(this.rateUrl + `/${branch}`);\r\n  }\r\n}\r\n","export default \"<app-header\\n  title=\\\"ອັດຕາແລກປ່ຽນ\\\"\\n  [href]=\\\"url.home +'/'+ url.generalSetting\\\"\\n  [showAction]=\\\"true\\\"\\n>\\n</app-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"isRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n  <ion-list>\\n    <ng-container *ngFor=\\\"let rate of rates; let i=index\\\">\\n      <ion-item lines=\\\"full\\\" [detail]=\\\"false\\\">\\n        <span slot=\\\"start\\\"> {{i+1}} </span>\\n        <ion-label>\\n          <h4>{{rate.Currency.name}}</h4>\\n          <p>ອັດຕາແລກປ່ຽນ {{rate.rate | number}}</p>\\n        </ion-label>\\n\\n        <app-edit-button controlType=\\\"edit\\\"></app-edit-button>\\n      </ion-item>\\n    </ng-container>\\n  </ion-list>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}