{"version":3,"file":"src_app_pages_customer_customer_module_ts.js","mappings":"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","sources":["./src/app/pages/add-customer/add-customer.page.ts","./src/app/pages/customer/customer.module.ts","./src/app/pages/customer/customer.page.ts","./src/app/services/customer.service.ts","./src/app/services/district.service.ts","./src/app/services/province.service.ts","./src/app/pages/add-customer/add-customer.page.html","./src/app/pages/customer/customer.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { appUrl } from 'src/app/app-url.module';\nimport { ICustomer } from 'src/app/models/customer.model';\nimport { IDistrict } from 'src/app/models/district.model';\nimport { IProvince } from 'src/app/models/province.model';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { DistrictService } from 'src/app/services/district.service';\nimport { GlobalService } from 'src/app/services/global.service';\nimport { ProvinceService } from 'src/app/services/province.service';\n\n@Component({\n  selector: 'app-add-customer',\n  templateUrl: './add-customer.page.html',\n  styleUrls: ['./add-customer.page.scss'],\n})\nexport class AddCustomerPage implements OnInit {\n  isCreate = false;\n  url = appUrl;\n\n  provinces: IProvince[] = [];\n  districts: IDistrict[] = [];\n\n  form!: FormGroup;\n\n  constructor(\n    private activeRoute: ActivatedRoute,\n    private provinceService: ProvinceService,\n    private districtService: DistrictService,\n    private customerService: CustomerService,\n    private globalService: GlobalService,\n    private router: Router\n  ) {}\n\n  get f() {\n    return this.form.controls;\n  }\n\n  ngOnInit() {\n    this.initializeApp();\n    this.onFetchProvince();\n    this.onFetchById();\n  }\n\n  initializeApp() {\n    this.form = new FormGroup({\n      id: new FormControl(''),\n      firstname: new FormControl('', [Validators.required]),\n      lastname: new FormControl('', [Validators.required]),\n      phone: new FormControl('', [Validators.required]),\n      province: new FormControl('', [Validators.required]),\n      district: new FormControl('', [Validators.required]),\n      village: new FormControl('', [Validators.required]),\n    });\n  }\n\n  async onFetchById() {\n    this.activeRoute.paramMap.subscribe((param) => {\n      if (param.get('id')) {\n        this.globalService.backdropLoading$.next(true);\n        this.customerService.getCustomer(param.get('id')).subscribe({\n          next: (data) => {\n            if (!!data) {\n              this.form.patchValue({\n                id: data.id,\n                firstname: data.firstname,\n                lastname: data.lastname,\n                phone: data.phone,\n                province: data.provinceId,\n                district: data.districtId,\n                village: data.village,\n              });\n\n              this.onChangeProvince(data.provinceId.toString());\n\n              this.isCreate = true;\n            }\n          },\n          error: () => {\n            this.globalService.backdropLoading$.next(false);\n          },\n          complete: () => {\n            this.globalService.backdropLoading$.next(false);\n          },\n        });\n      }\n    });\n  }\n\n  onFetchProvince() {\n    this.provinceService\n      .getAllProvince()\n      .pipe(map((val) => val.provinces))\n      .subscribe({\n        next: (data) => {\n          this.provinces = data;\n        },\n        error: () => {},\n        complete: () => {},\n      });\n  }\n\n  onChangeProvince(value: string) {\n    this.districtService\n      .getAllProvince(value)\n      .pipe(map((val) => val.districts))\n      .subscribe({\n        next: (data) => {\n          this.districts = data;\n        },\n        error: () => {},\n        complete: () => {},\n      });\n  }\n\n  onSave() {\n    if (this.form.invalid) {\n      return this.form.markAllAsTouched();\n    }\n\n    const data: ICustomer = {\n      customerId: this.f.id.value,\n      districtId: this.f.district.value,\n      firstname: this.f.firstname.value,\n      lastname: this.f.lastname.value,\n      phone: this.f.phone.value,\n      provinceId: this.f.province.value,\n      village: this.f.village.value,\n    };\n\n    if (this.isCreate) {\n      this.customerService.updateCustomer(data).subscribe({\n        next: () => {\n          this.router.navigate([this.url.home, this.url.customer]);\n        },\n        error: () => {},\n        complete: () => {},\n      });\n    } else {\n      this.customerService.createCustomer(data).subscribe({\n        next: () => {\n          this.router.navigate([this.url.home, this.url.customer]);\n        },\n        error: () => {},\n        complete: () => {},\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { SharedLayoutComponentModule } from 'src/app/shared/shared-layout-component.module';\n\nimport { CustomerPage } from './customer.page';\nimport { SharedComponenttModule } from 'src/app/shared/shared-component.module';\nimport { appUrl } from 'src/app/app-url.module';\nimport { AddCustomerPage } from '../add-customer/add-customer.page';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: CustomerPage,\n      },\n      {\n        path: appUrl.addCustomer,\n        component: AddCustomerPage,\n      },\n      {\n        path: appUrl.editCustomer + '/:id',\n        component: AddCustomerPage,\n      },\n    ]),\n    SharedLayoutComponentModule,\n    SharedComponenttModule,\n  ],\n  declarations: [CustomerPage, AddCustomerPage],\n})\nexport class CustomerPageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { appUrl } from 'src/app/app-url.module';\nimport { ICustomer } from 'src/app/models/customer.model';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { GlobalService } from 'src/app/services/global.service';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.page.html',\n  styleUrls: ['./customer.page.scss'],\n})\nexport class CustomerPage implements OnInit, OnDestroy {\n  customers: ICustomer[] = [];\n  url = appUrl;\n  loading = false;\n\n  private ondestroy$ = new Subscription();\n  constructor(\n    private router: Router,\n    private activeRoute: ActivatedRoute,\n    private customerService: CustomerService,\n    private globalService: GlobalService\n  ) {}\n\n  ngOnInit() {\n    this.onFetchData();\n    this.initializeApp();\n  }\n  ngOnDestroy(): void {\n    this.ondestroy$.unsubscribe();\n  }\n\n  initializeApp() {\n    this.ondestroy$ = this.globalService.loading$.subscribe((value) => {\n      this.loading = value;\n    });\n  }\n\n  addCustomer() {\n    this.router.navigate([this.url.addCustomer], {\n      relativeTo: this.activeRoute,\n    });\n  }\n  editCustomer(id: string) {\n    this.router.navigate([this.url.editCustomer, id], {\n      relativeTo: this.activeRoute,\n    });\n  }\n\n  isRefresh(evt: any) {\n    setTimeout(() => {\n      this.onFetchData();\n      evt.target.complete();\n    }, 1000);\n  }\n\n  onFetchData() {\n    this.globalService.loading$.next(true);\n    this.customerService.getAllCustomer().then((observe) => {\n      observe.pipe(map((val) => val.customer)).subscribe({\n        next: (data) => {\n          this.customers = data;\n        },\n        error: () => {\n          this.globalService.loading$.next(false);\n        },\n        complete: () => {\n          this.globalService.loading$.next(false);\n        },\n      });\n    });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ICustomer } from '../models/customer.model';\r\nimport { StorageService } from './storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CustomerService {\r\n  private url = 'customers';\r\n\r\n  constructor(private http: HttpClient, private storage: StorageService) {}\r\n\r\n  async getAllCustomer(): Promise<Observable<{ customer: ICustomer[] }>> {\r\n    const branch = await this.storage.storageData('branch');\r\n    return await this.http.get<{ customer: ICustomer[] }>(\r\n      this.url + `/${branch}`\r\n    );\r\n  }\r\n\r\n  getCustomer(id: string): Observable<ICustomer> {\r\n    return this.http.get<ICustomer>(this.url + `/get/${id}`);\r\n  }\r\n\r\n  createCustomer(customer: ICustomer): Observable<any> {\r\n    return this.http.post<any>(this.url, customer);\r\n  }\r\n\r\n  updateCustomer(customer: ICustomer): Observable<any> {\r\n    return this.http.put<any>(this.url, customer);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { IDistrict } from '../models/district.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DistrictService {\r\n  private url = 'districts';\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllProvince(id: string): Observable<{ districts: IDistrict[] }> {\r\n    return this.http.get<{ districts: IDistrict[] }>(this.url + `/${id}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { IProvince } from '../models/province.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProvinceService {\r\n  private url = 'provinces';\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllProvince(): Observable<{ provinces: IProvince[] }> {\r\n    return this.http.get<{ provinces: IProvince[] }>(this.url);\r\n  }\r\n\r\n  getProvince(id: string): Observable<IProvince> {\r\n    return this.http.get<IProvince>(this.url);\r\n  }\r\n}\r\n","export default \"<app-header\\n  [title]=\\\"isCreate? 'ແກ້ໄຂລູກຄ້າ': 'ເພີ່ມລູກຄ້າ' \\\"\\n  [href]=\\\"url.home +'/'+ url.customer\\\"\\n>\\n</app-header>\\n\\n<app-backdrop-loading></app-backdrop-loading>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form [formGroup]=\\\"form\\\">\\n    <ion-grid>\\n      <!-- firstname && lastname -->\\n      <ion-row>\\n        <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>ຊື່</label>\\n            <app-input-form\\n              placeholder=\\\"ຊື່\\\"\\n              [control]=\\\"$any(f['firstname'])\\\"\\n            ></app-input-form>\\n          </div>\\n        </ion-col>\\n        <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>ນາມສະກຸນ</label>\\n            <app-input-form\\n              placeholder=\\\"ນາມສະກຸນ\\\"\\n              [control]=\\\"$any(f['lastname'])\\\"\\n            ></app-input-form>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- phone -->\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>ເບີໂທ</label>\\n            <app-input-form\\n              placeholder=\\\"ເບີໂທ\\\"\\n              [control]=\\\"$any(f['phone'])\\\"\\n            ></app-input-form>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- province && district -->\\n      <ion-row>\\n        <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>ເລືອກແຂວງ</label>\\n            <ion-item\\n              lines=\\\"none\\\"\\n              class=\\\"item-input\\\"\\n              [ngClass]=\\\"{ error: f['province'].errors && (f['province'].dirty || f['province'].touched) }\\\"\\n            >\\n              <ion-select\\n                formControlName=\\\"province\\\"\\n                placeholder=\\\"ເລືອກແຂວງ\\\"\\n                interface=\\\"action-sheet\\\"\\n                #province\\n                (ionChange)=\\\"onChangeProvince(province.value)\\\"\\n              >\\n                <ng-container *ngFor=\\\"let data of provinces\\\">\\n                  <ion-select-option [value]=\\\"data.id\\\">\\n                    {{data.name}}\\n                  </ion-select-option>\\n                </ng-container>\\n              </ion-select>\\n            </ion-item>\\n          </div>\\n        </ion-col>\\n        <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>ເລືອກເມືອງ</label>\\n            <ion-item\\n              lines=\\\"none\\\"\\n              class=\\\"item-input\\\"\\n              [ngClass]=\\\"{ error: f['district'].errors && (f['district'].dirty || f['district'].touched) }\\\"\\n            >\\n              <ion-select\\n                formControlName=\\\"district\\\"\\n                placeholder=\\\"ເລືອກເມືອງ\\\"\\n                interface=\\\"action-sheet\\\"\\n              >\\n                <ng-container *ngFor=\\\"let data of districts\\\">\\n                  <ion-select-option [value]=\\\"data.id\\\">\\n                    {{data.name}}\\n                  </ion-select-option>\\n                </ng-container>\\n              </ion-select>\\n            </ion-item>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- village -->\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>ບ້ານ</label>\\n            <app-input-form\\n              placeholder=\\\"ບ້ານ\\\"\\n              [control]=\\\"$any(f['village'])\\\"\\n            ></app-input-form>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row class=\\\"action-form\\\">\\n        <ion-col size=\\\"12\\\">\\n          <ion-button\\n            type=\\\"button\\\"\\n            color=\\\"primary\\\"\\n            expand=\\\"block\\\"\\n            shape=\\\"round\\\"\\n            (click)=\\\"onSave()\\\"\\n          >\\n            ບັນທຶກ\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\";","export default \"<app-header\\n  title=\\\"ລູກຄ້າ\\\"\\n  iconAction=\\\"person-add-outline\\\"\\n  [href]=\\\"url.home +'/'+ url.manageBusiness\\\"\\n  [showAction]=\\\"true\\\"\\n  (showActionEmit)=\\\"addCustomer()\\\"\\n>\\n</app-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"isRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n  <ng-container *ngIf=\\\"customers.length && !loading; else loadingTemplate\\\">\\n    <ion-list>\\n      <ng-container *ngFor=\\\"let customer of customers\\\">\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label>\\n            <h4>{{customer.firstname}} {{customer.lastname}}</h4>\\n            <p>ເບີໂທ : {{customer.phone}}</p>\\n          </ion-label>\\n          <app-edit-button\\n            controlType=\\\"edit\\\"\\n            (editEmit)=\\\"editCustomer(customer.id || '')\\\"\\n          ></app-edit-button>\\n          <app-edit-button controlType=\\\"del\\\"></app-edit-button>\\n        </ion-item>\\n      </ng-container>\\n    </ion-list>\\n  </ng-container>\\n\\n  <ng-template #loadingTemplate>\\n    <app-loading></app-loading>\\n  </ng-template>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}